(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{117:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return h}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),f=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=f(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=f(n),d=r,h=s["".concat(c,".").concat(d)]||s[d]||l[d]||a;return n?o.a.createElement(h,i(i({ref:t},u),{},{components:n})):o.a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var u=2;u<a;u++)c[u]=n[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return f}));var r=n(2),o=n(6),a=(n(0),n(117)),c={title:"PHP",parent:"create",order:3},i={unversionedId:"examples/createphp",id:"examples/createphp",isDocsHomePage:!1,title:"PHP",description:"The request in php",source:"@site/docs/examples/createphp.md",slug:"/examples/createphp",permalink:"/doc.pidconsortium.eu/docs/examples/createphp",editUrl:"https://github.com/grnet/doc.pidconsortium.eu/docs/examples/createphp.md",version:"current"},p=[],u={rightToc:p};function f(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The request in php "),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-php"}),'$PIDSERVICE_URL="THE_SERVICE_URL_WITH_PREFIX";\n$PIDSERVICE_USER="YOURUSERNAME";\n$PIDSERVICE_PASSWD="YOURPASSWORD";\n$UUID = gen_uuid(); //a function to generate a uuid\n$URL_TO_OPEN = $PIDSERVICE_URL.$UUID;\n$data = array(array(\'type\' => \'URL\',\'parsed_data\'=>\'http://www.grnet.gr/\'));\n$update_json=json_encode($data);\n\n// Get cURL resource\n$ch = curl_init();\n\n//Set the headers to complete the request\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array(\'Content-Type: application/json\',\'Content-Length: \' . strlen($update_json)));\n\n//set the PUT Action\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n\n//SET the postfield data\ncurl_setopt($ch, CURLOPT_POSTFIELDS,$update_json);\n\n// Should cURL return or print out the data? (true = return, false = print)\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n//Set the url with the new name of the PID \ncurl_setopt($ch, CURLOPT_URL, $URL_TO_OPEN);\n\n// Set the authentication options\ncurl_setopt($ch, CURLOPT_USERPWD, $PIDSERVICE_USER.":".$PIDSERVICE_PASSWD);\ncurl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);\n\n$output = curl_exec($ch);\n$info = curl_getinfo($ch);\n\n// Download the given URL, and return output \n\nif( $info[\'http_code\']==200) echo "HANDLE EXISTS<br/>";\nif( $info[\'http_code\']==201) echo "PID CREATED<br/>";\nif( $info[\'http_code\']==204) echo "PID UPDATED<br/>";\nif( $info[\'http_code\']==404) echo "HANDLE DOESNT EXIST<br/>";\n\ncurl_close($ch);\n\nfunction gen_uuid() {\n    return sprintf( \'%04x%04x-%04x-%04x-%04x-%04x%04x%04x\',\n            // 32 bits for "time_low"\n            mt_rand( 0, 0xffff ), mt_rand( 0, 0xffff ),\n\n            // 16 bits for "time_mid"\n            mt_rand( 0, 0xffff ),\n\n            // 16 bits for "time_hi_and_version",\n            // four most significant bits holds version number 4\n            mt_rand( 0, 0x0fff ) | 0x4000,\n\n            // 16 bits, 8 bits for "clk_seq_hi_res",\n            // 8 bits for "clk_seq_low",\n            // two most significant bits holds zero and one for variant DCE1.1\n            mt_rand( 0, 0x3fff ) | 0x8000,\n\n            // 48 bits for "node"\n            mt_rand( 0, 0xffff ), mt_rand( 0, 0xffff ), mt_rand( 0, 0xffff )\n    );\n}\n')))}f.isMDXComponent=!0}}]);