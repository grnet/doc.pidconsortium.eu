(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{117:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return h}));var r=n(0),o=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),l=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=l(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=l(n),d=r,h=s["".concat(a,".").concat(d)]||s[d]||f[d]||c;return n?o.a.createElement(h,p(p({ref:t},u),{},{components:n})):o.a.createElement(h,p({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,a=new Array(c);a[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,a[1]=p;for(var u=2;u<c;u++)a[u]=n[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),c=(n(0),n(117)),a={title:"PHP",parent:"generate",order:3},p={unversionedId:"examples/generatephp",id:"examples/generatephp",isDocsHomePage:!1,title:"PHP",description:"The request in php",source:"@site/docs/examples/generatephp.md",slug:"/examples/generatephp",permalink:"/doc.pidconsortium.eu/docs/examples/generatephp",editUrl:"https://github.com/grnet/doc.pidconsortium.eu/docs/examples/generatephp.md",version:"current"},i=[],u={rightToc:i};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The request in php "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-php"}),"$PIDSERVICE_URL=\"THE_SERVICE_URL_WITH_PREFIX\";\n$PIDSERVICE_USER=\"YOURUSERNAME\";\n$PIDSERVICE_PASSWD=\"YOURPASSWORD\";\n$UUID = \"?prefix=GRNET&suffix=TEST\";\n$URL_TO_OPEN = $PIDSERVICE_URL.$UUID;\n$data = array(array('type' => 'URL','parsed_data'=>'http://www.grnet.gr/'));\n$update_json=json_encode($data);\n\n// Get cURL resource\n$ch = curl_init();\n\n//Set the headers to complete the request\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json','Content-Length: ' . strlen($update_json)));\n\n//set the POST Action\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\");\n\n//SET the postfield data\ncurl_setopt($ch, CURLOPT_POSTFIELDS,$update_json);\n\n// Should cURL return or print out the data? (true = return, false = print)\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n//Set the url with the new name of the PID \ncurl_setopt($ch, CURLOPT_URL, $URL_TO_OPEN);\n\n// Set the authentication options\ncurl_setopt($ch, CURLOPT_USERPWD, $PIDSERVICE_USER.\":\".$PIDSERVICE_PASSWD);\ncurl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);\n\n$output = curl_exec($ch);\n$info = curl_getinfo($ch);\n\n// Download the given URL, and return output \n\nif( $info['http_code']==200) echo \"HANDLE EXISTS<br/>\";\nif( $info['http_code']==201) echo \"PID CREATED<br/>\";\nif( $info['http_code']==204) echo \"PID UPDATED<br/>\";\nif( $info['http_code']==404) echo \"HANDLE DOESNT EXIST<br/>\";\n\ncurl_close($ch);\n")))}l.isMDXComponent=!0}}]);