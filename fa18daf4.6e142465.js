(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{122:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return c}));var r=n(2),a=n(6),l=(n(0),n(125)),i={id:"methods",title:"Methods",slug:"methods"},o={unversionedId:"methods",id:"methods",isDocsHomePage:!1,title:"Methods",description:"Methods - GET Handle",source:"@site/docs/methods.md",slug:"/methods",permalink:"/doc.pidconsortium.eu/docs/methods",editUrl:"https://github.com/grnet/doc.pidconsortium.eu/docs/methods.md",version:"current",sidebar:"someSidebar",previous:{title:"Responses",permalink:"/doc.pidconsortium.eu/docs/responses"}},s=[{value:"Methods - GET Handle",id:"methods---get-handle",children:[]},{value:"Methods - PUT",id:"methods---put",children:[]},{value:"Methods - DELETE",id:"methods---delete",children:[]},{value:"Methods - GET Prefix",id:"methods---get-prefix",children:[]}],d={rightToc:s};function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"methods---get-handle"},"Methods - GET Handle"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/api/handles/{handle}\n")),Object(l.b)("p",null,"Resolves the handle record for handle {handle}."),Object(l.b)("p",null,"URI query parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"index={index}"),"\nSpecifies that only the handle value with index {index} should be resolved. The query parameter\ncan be repeated to indicate a collection of handle values."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"type={type}"),"\nSpecifies that only the handle values with type {type} should be resolved. If {type} ends with a\nperiod all period-delimited subtypes are included. The query parameter can be repeated.\nMultiple index and type parameters indicate that all handle values either of a matching index or\na matching type should be resolved."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"auth=","[true|false]"),"\nIf true, perform an authoritative resolution, bypassing cache and sending the request to a\nprimary server. Default: false. This flag is ignored in requests sent directly to an end server\n(instead of a proxy)."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"publicOnly=","[true|false]"),"\nIf true, only resolve publicly readable handle values. If false, resolve all values, potentially\nresulting in a 401 Unauthorized response. Default: true for unauthenticated requests, false for\nauthenticated requests.")),Object(l.b)("p",null,"Response entity: an object with the following properties:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'"responseCode": Handle protocol response code for the message.'),Object(l.b)("li",{parentName:"ul"},'"handle": The handle specified in the request.'),Object(l.b)("li",{parentName:"ul"},'"message": For error responses, an error message.'),Object(l.b)("li",{parentName:"ul"},'"values": An array of handle values.')),Object(l.b)("h2",{id:"methods---put"},"Methods - PUT"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/api/handles/{handle}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/api/handles/{handle}?index={index}\n")),Object(l.b)("p",null,"Create the handle {handle} or replace its handle record. If query parameters specify specific indices, add or replace those specific handle values in the handle record."),Object(l.b)("p",null,"Request entity: an array of handle values, or an object with property values an array of handle values\n(other properties are ignored). A single value is accepted as well."),Object(l.b)("p",null,"URI query parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"index={index}"),"\nSpecifies that only the handle value with index {index} should be added or replaced. The query\nparameter can be repeated to indicate a collection of handle values. The indices must match\nthe indices of the handle values in the request entity."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"index=various"),"\nA shortcut to indicate that the handle values given in the request entity should be added or\nreplaced."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"overwrite=","[true|false]"),"\nIf true, replace handle records of handles which already exist, or replace handle values which\nalready exist. If false, return 409 Conflict for attempts to PUT an existing handle or existing\nhandle values. Default: true."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"mintNewSuffix=","[true|false]"),"\nIf true, the handle to be created is formed by appending a random server-generated string to\nthe {handle} parameter. Note that the slash should be included in the {handle} parameter.\nDefault: false.")),Object(l.b)("p",null,"Response entity: an object with the following properties:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'"responseCode": Handle protocol response code for the message.'),Object(l.b)("li",{parentName:"ul"},'"handle": The handle specified in the request.'),Object(l.b)("li",{parentName:"ul"},'"message": For error responses, an error message.')),Object(l.b)("h2",{id:"methods---delete"},"Methods - DELETE"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/api/handles/{handle}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/api/handles/{handle}?index={index}\n")),Object(l.b)("p",null,"Delete the handle {handle}. If query parameters specify specific indices, delete those specific handle\nvalues from the handle record."),Object(l.b)("p",null,"URI query parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"index={index}"),"\nSpecifies that only the handle value with index {index} should be deleted. The query parameter\ncan be repeated to indicate a collection of handle values.")),Object(l.b)("p",null,"Response entity: an object with the following properties:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'"responseCode": Handle protocol response code for the message.'),Object(l.b)("li",{parentName:"ul"},'"handle": The handle specified in the request.'),Object(l.b)("li",{parentName:"ul"},'"message": For error responses, an error message.')),Object(l.b)("h2",{id:"methods---get-prefix"},"Methods - GET Prefix"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/api/handles?prefix={prefix}\n")),Object(l.b)("p",null,"List handles under prefix {prefix}."),Object(l.b)("p",null,"URI query parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"prefix={prefix}"),"\nRequired. Specifies the prefix of the handles to be listed."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"page={page}"),Object(l.b)("strong",{parentName:"li"},"pageSize={pageSize}"),"\nSpecify paginated listing. The page number {page} is zero-based. If the page size {pageSize} is\nzero a count of handles is returned but no handles. If either parameter is missing or negative all\nhandles are returned.")),Object(l.b)("p",null,"Response entity: an object with the following properties:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'"responseCode": Handle protocol response code for the message.'),Object(l.b)("li",{parentName:"ul"},'"prefix": The prefix specified in the request.'),Object(l.b)("li",{parentName:"ul"},'"message": For error responses, an error message.'),Object(l.b)("li",{parentName:"ul"},'"totalCount": The total number of handles under the given prefix.'),Object(l.b)("li",{parentName:"ul"},'"handles": An array of strings.')))}c.isMDXComponent=!0},125:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),c=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),b=r,h=p["".concat(i,".").concat(b)]||p[b]||u[b]||l;return n?a.a.createElement(h,o(o({ref:t},d),{},{components:n})):a.a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);